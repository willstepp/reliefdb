<h1>Load: <%=h @load.title %></h1>
<B>Source:</B><BR>
<%=link_to h(@load.source.name), :controller => 'shelters', :action => 'show', :id => @load.source.id %><BR>
<%=tf @load.source.mailing_address_without_name %>
<P>
<B>Destination:</B><BR>
<%=link_to h(@load.destination.name), :controller => 'shelters', :action => 'show', :id => @load.destination.id %><BR>
<%=tf @load.destination.mailing_address_without_name %>
<P>
<small><%=link_to '(new load between these facilities)', :controller => 'loads', :action => 'new', :srcid => @load.source, :dstid => @load.destination %></small><BR>
<BR>
<B>Ready By: </B><%= @load.ready_by && @load.ready_by.ctime %><BR>
<B>Current Status: </B><%= @load.status.colored %><BR>
<% if @nextstatuses and @nextstatuses.size > 0 %>
<small>[<B>Move to Status: </B>
<% for i in @nextstatuses %>
  <%= link_to(Load::Status.new(i), {:action => 'change_status', :id => @load, :newstatus => i }, :style => "color:#{Load::Status.new(i).color}") %>  
<% end %>
]</small>
<BR>
<% end %>
<% if @load.routing_type == 1 %>
<font color="red"><B>Needs intermediate warehouse</B></font><BR>
<small>Once warehouse is identified, cancel this load, then create loads from source to warehouse, and from warehouse to destination.</small><BR>
<% end %>
<BR>
<B>Transport Available/Identified: </B><%= @load.transport_avail %><BR>
<B>Trucker Name: </B><%=h @load.trucker_name %><BR>
<B>Truck Registration: </B><%=h @load.truck_reg %><BR>
<BR>
<B>Estimated Time of Departure: </B><%= @load.etd && @load.etd.ctime %><BR>
<B>Estimated Time of Arrival: </B><%= @load.eta && @load.eta.ctime %><BR>
<BR>
<% pending_accept = @nextstatuses.include?(10) %>
<B>Contents:</B><BR>
<table>
  <% if pending_accept %>
    <tr><th>Item</th><th>Qty Offered</th><th>Qty Needed</th><th>Qty to Accept</th></tr>
  <% else %>
    <tr><th>Item</th><th>Qty Sending</th><th>Qty Needed</th></tr>
  <% end %>
  <% @load.items_ary.each do |h| %>
    <% item = h[:item] %>
    <% have = h[:have] %>
    <% needed = h[:needed] %>
    <% sending = h[:sending] %>
    <% accepted = h[:accepted] %>
    <% next if sending.to_i == 0 %>
    <tr>
      <td><%=h item.name %></td>
      <td><%= sending %></td>
      <td><%= needed %></td>
      <% if pending_accept %>
      <td><%= Load.will_send(sending, needed) %></td>
      <% end %>
    </tr>
  <% end %>
</table>
<BR>
<% if pending_accept %>
<%=link_to "Accept Different Quantities", :action => 'accept', :id => @load %><BR>
(to accept indicated qtys, just change status to Accepted)
<P>
<% end %>
<B>Notes: </B><%= simple_format h(@load.access("notes", session['user']))%>
<%= display_history_for(@load).html_safe %>
<BR>
<B>Created At: </B><%= @load.access("created_at", session['user']) %><BR>
<B>Updated At: </B><%= @load.access("updated_at", session['user']) %><BR>
<B>Updated By: </B><%= @load.safe_upd_by%><BR>
<P><hr>
<%= link_to 'Edit', :action => 'edit', :id => @load %> |
<%= back_to :controller => 'shelters', :action => 'show', :id => @load.source %>
